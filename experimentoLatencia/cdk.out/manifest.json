{
  "version": "48.0.0",
  "artifacts": {
    "ExperimentoStack.assets": {
      "type": "cdk:asset-manifest",
      "properties": {
        "file": "ExperimentoStack.assets.json",
        "requiresBootstrapStackVersion": 6,
        "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/exp/version"
      }
    },
    "ExperimentoStack": {
      "type": "aws:cloudformation:stack",
      "environment": "aws://868422696635/us-east-1",
      "properties": {
        "templateFile": "ExperimentoStack.template.json",
        "terminationProtection": false,
        "validateOnSynth": false,
        "assumeRoleArn": "arn:${AWS::Partition}:iam::868422696635:role/cdk-exp-deploy-role-868422696635-us-east-1",
        "cloudFormationExecutionRoleArn": "arn:${AWS::Partition}:iam::868422696635:role/cdk-exp-cfn-exec-role-868422696635-us-east-1",
        "stackTemplateAssetObjectUrl": "s3://cdk-exp-assets-868422696635-us-east-1/1cf17d9b5acf8e37089b7e6788cd5ef4b642b77bcbd056e9be6c9113304cbc1c.json",
        "requiresBootstrapStackVersion": 6,
        "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/exp/version",
        "additionalDependencies": [
          "ExperimentoStack.assets"
        ],
        "lookupRole": {
          "arn": "arn:${AWS::Partition}:iam::868422696635:role/cdk-exp-lookup-role-868422696635-us-east-1",
          "requiresBootstrapStackVersion": 8,
          "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/exp/version"
        }
      },
      "dependencies": [
        "ExperimentoStack.assets"
      ],
      "metadata": {
        "/ExperimentoStack/ExperimentoVpc": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "cidr": "*",
              "maxAzs": "*",
              "natGateways": "*",
              "subnetConfiguration": [
                {
                  "name": "*",
                  "subnetType": "Public",
                  "cidrMask": "*"
                },
                {
                  "name": "*",
                  "subnetType": "Private",
                  "cidrMask": "*"
                }
              ]
            }
          }
        ],
        "/ExperimentoStack/ExperimentoVpc/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ExperimentoVpc0BF8ED67"
          }
        ],
        "/ExperimentoStack/ExperimentoVpc/PublicSubnet1": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "availabilityZone": "*",
              "vpcId": "*",
              "cidrBlock": "*",
              "mapPublicIpOnLaunch": true,
              "ipv6CidrBlock": "*",
              "assignIpv6AddressOnCreation": "*"
            }
          },
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "availabilityZone": "*",
              "vpcId": "*",
              "cidrBlock": "*",
              "mapPublicIpOnLaunch": true,
              "ipv6CidrBlock": "*",
              "assignIpv6AddressOnCreation": "*"
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {}
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addNatGateway": [
                "*"
              ]
            }
          }
        ],
        "/ExperimentoStack/ExperimentoVpc/PublicSubnet1/Subnet": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ExperimentoVpcPublicSubnet1Subnet9A7B4C3A"
          }
        ],
        "/ExperimentoStack/ExperimentoVpc/PublicSubnet1/RouteTable": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ExperimentoVpcPublicSubnet1RouteTable46962067"
          }
        ],
        "/ExperimentoStack/ExperimentoVpc/PublicSubnet1/RouteTableAssociation": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ExperimentoVpcPublicSubnet1RouteTableAssociationDA95DD8A"
          }
        ],
        "/ExperimentoStack/ExperimentoVpc/PublicSubnet1/DefaultRoute": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ExperimentoVpcPublicSubnet1DefaultRoute649DFF5F"
          }
        ],
        "/ExperimentoStack/ExperimentoVpc/PublicSubnet1/EIP": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ExperimentoVpcPublicSubnet1EIP4193D674"
          }
        ],
        "/ExperimentoStack/ExperimentoVpc/PublicSubnet1/NATGateway": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ExperimentoVpcPublicSubnet1NATGatewayE8123CB8"
          }
        ],
        "/ExperimentoStack/ExperimentoVpc/PublicSubnet2": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "availabilityZone": "*",
              "vpcId": "*",
              "cidrBlock": "*",
              "mapPublicIpOnLaunch": true,
              "ipv6CidrBlock": "*",
              "assignIpv6AddressOnCreation": "*"
            }
          },
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "availabilityZone": "*",
              "vpcId": "*",
              "cidrBlock": "*",
              "mapPublicIpOnLaunch": true,
              "ipv6CidrBlock": "*",
              "assignIpv6AddressOnCreation": "*"
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {}
          }
        ],
        "/ExperimentoStack/ExperimentoVpc/PublicSubnet2/Subnet": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ExperimentoVpcPublicSubnet2Subnet22592CCB"
          }
        ],
        "/ExperimentoStack/ExperimentoVpc/PublicSubnet2/RouteTable": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ExperimentoVpcPublicSubnet2RouteTable95CD081D"
          }
        ],
        "/ExperimentoStack/ExperimentoVpc/PublicSubnet2/RouteTableAssociation": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ExperimentoVpcPublicSubnet2RouteTableAssociation2BCED089"
          }
        ],
        "/ExperimentoStack/ExperimentoVpc/PublicSubnet2/DefaultRoute": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ExperimentoVpcPublicSubnet2DefaultRoute7AB6494C"
          }
        ],
        "/ExperimentoStack/ExperimentoVpc/PrivateSubnet1": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "availabilityZone": "*",
              "vpcId": "*",
              "cidrBlock": "*",
              "mapPublicIpOnLaunch": false,
              "ipv6CidrBlock": "*",
              "assignIpv6AddressOnCreation": "*"
            }
          },
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "availabilityZone": "*",
              "vpcId": "*",
              "cidrBlock": "*",
              "mapPublicIpOnLaunch": false,
              "ipv6CidrBlock": "*",
              "assignIpv6AddressOnCreation": "*"
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {}
          }
        ],
        "/ExperimentoStack/ExperimentoVpc/PrivateSubnet1/Subnet": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ExperimentoVpcPrivateSubnet1Subnet380715A8"
          }
        ],
        "/ExperimentoStack/ExperimentoVpc/PrivateSubnet1/RouteTable": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ExperimentoVpcPrivateSubnet1RouteTable8398926E"
          }
        ],
        "/ExperimentoStack/ExperimentoVpc/PrivateSubnet1/RouteTableAssociation": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ExperimentoVpcPrivateSubnet1RouteTableAssociationED2879D9"
          }
        ],
        "/ExperimentoStack/ExperimentoVpc/PrivateSubnet1/DefaultRoute": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ExperimentoVpcPrivateSubnet1DefaultRoute37ACBB20"
          }
        ],
        "/ExperimentoStack/ExperimentoVpc/PrivateSubnet2": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "availabilityZone": "*",
              "vpcId": "*",
              "cidrBlock": "*",
              "mapPublicIpOnLaunch": false,
              "ipv6CidrBlock": "*",
              "assignIpv6AddressOnCreation": "*"
            }
          },
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "availabilityZone": "*",
              "vpcId": "*",
              "cidrBlock": "*",
              "mapPublicIpOnLaunch": false,
              "ipv6CidrBlock": "*",
              "assignIpv6AddressOnCreation": "*"
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {}
          }
        ],
        "/ExperimentoStack/ExperimentoVpc/PrivateSubnet2/Subnet": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ExperimentoVpcPrivateSubnet2Subnet940E05F8"
          }
        ],
        "/ExperimentoStack/ExperimentoVpc/PrivateSubnet2/RouteTable": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ExperimentoVpcPrivateSubnet2RouteTable39F64E4A"
          }
        ],
        "/ExperimentoStack/ExperimentoVpc/PrivateSubnet2/RouteTableAssociation": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ExperimentoVpcPrivateSubnet2RouteTableAssociationB30918D5"
          }
        ],
        "/ExperimentoStack/ExperimentoVpc/PrivateSubnet2/DefaultRoute": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ExperimentoVpcPrivateSubnet2DefaultRoute1877738D"
          }
        ],
        "/ExperimentoStack/ExperimentoVpc/IGW": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ExperimentoVpcIGWEBB48F2D"
          }
        ],
        "/ExperimentoStack/ExperimentoVpc/VPCGW": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ExperimentoVpcVPCGW48816778"
          }
        ],
        "/ExperimentoStack/ExperimentoVpc/RestrictDefaultSecurityGroupCustomResource": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          }
        ],
        "/ExperimentoStack/ExperimentoVpc/RestrictDefaultSecurityGroupCustomResource/Default": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ExperimentoVpcRestrictDefaultSecurityGroupCustomResource5C2D7AC1"
          }
        ],
        "/ExperimentoStack/Custom::VpcRestrictDefaultSGCustomResourceProvider": [
          {
            "type": "aws:cdk:is-custom-resource-handler-customResourceProvider",
            "data": true
          }
        ],
        "/ExperimentoStack/Custom::VpcRestrictDefaultSGCustomResourceProvider/Role": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0"
          }
        ],
        "/ExperimentoStack/Custom::VpcRestrictDefaultSGCustomResourceProvider/Handler": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CustomVpcRestrictDefaultSGCustomResourceProviderHandlerDC833E5E"
          }
        ],
        "/ExperimentoStack/ExperimentoCluster": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "clusterName": "*",
              "vpc": "*"
            }
          }
        ],
        "/ExperimentoStack/ExperimentoCluster/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ExperimentoClusterD1BADF8A"
          }
        ],
        "/ExperimentoStack/ExperimentoALB": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": "*"
          }
        ],
        "/ExperimentoStack/ExperimentoALB/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ExperimentoALB4222696C"
          }
        ],
        "/ExperimentoStack/ExperimentoALB/SecurityGroup": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "vpc": "*",
              "description": "*",
              "allowAllOutbound": false
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addIngressRule": [
                {
                  "canInlineRule": true,
                  "connections": "*",
                  "uniqueId": "*"
                },
                {},
                "*",
                false
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addEgressRule": [
                "*",
                {},
                "*",
                true
              ]
            }
          }
        ],
        "/ExperimentoStack/ExperimentoALB/SecurityGroup/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ExperimentoALBSecurityGroup9F73BA63"
          }
        ],
        "/ExperimentoStack/ExperimentoALB/SecurityGroup/to ExperimentoStackProductsServiceSecurityGroup331EB863:8080": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ExperimentoALBSecurityGrouptoExperimentoStackProductsServiceSecurityGroup331EB86380801FBE9AE5"
          }
        ],
        "/ExperimentoStack/ExperimentoALB/ExperimentoALBListener": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": "*"
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": "*"
          }
        ],
        "/ExperimentoStack/ExperimentoALB/ExperimentoALBListener/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ExperimentoALBExperimentoALBListener3C387EBA"
          }
        ],
        "/ExperimentoStack/ExperimentoALB/ExperimentoALBListener/ProductsServiceTargetGroupRule/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ExperimentoALBExperimentoALBListenerProductsServiceTargetGroupRuleC44337E0"
          }
        ],
        "/ExperimentoStack/ExperimentoDB": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "vpc": "*",
              "deleteAutomatedBackups": true,
              "deletionProtection": false,
              "removalPolicy": "destroy",
              "vpcSubnets": {
                "subnetType": "Private"
              },
              "engine": {
                "engineType": "*",
                "singleUserRotationApplication": "*",
                "engineVersion": {
                  "fullVersion": "*",
                  "majorVersion": "*"
                },
                "parameterGroupFamily": "*",
                "engineFamily": "*",
                "defaultUsername": "*"
              },
              "allocatedStorage": "*",
              "instanceType": "*"
            }
          }
        ],
        "/ExperimentoStack/ExperimentoDB/SubnetGroup": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "description": "*",
              "vpc": "*",
              "vpcSubnets": {
                "subnetType": "Private"
              },
              "removalPolicy": "*"
            }
          }
        ],
        "/ExperimentoStack/ExperimentoDB/SubnetGroup/Default": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ExperimentoDBSubnetGroupB3217544"
          }
        ],
        "/ExperimentoStack/ExperimentoDB/SecurityGroup": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "description": "*",
              "vpc": "*"
            }
          }
        ],
        "/ExperimentoStack/ExperimentoDB/SecurityGroup/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ExperimentoDBSecurityGroup12B83545"
          }
        ],
        "/ExperimentoStack/ExperimentoDB/Secret": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "encryptionKey": "*",
              "secretName": "*",
              "replicaRegions": "*"
            }
          },
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "username": "*",
              "secretName": "*",
              "encryptionKey": "*",
              "excludeCharacters": "*",
              "replaceOnPasswordCriteriaChanges": "*",
              "replicaRegions": "*"
            }
          }
        ],
        "/ExperimentoStack/ExperimentoDB/Secret/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ExperimentoDBSecret230EFAC6"
          }
        ],
        "/ExperimentoStack/ExperimentoDB/Secret/Attachment": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "secret": "*",
              "target": "*"
            }
          }
        ],
        "/ExperimentoStack/ExperimentoDB/Secret/Attachment/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ExperimentoDBSecretAttachmentE8AEA386"
          }
        ],
        "/ExperimentoStack/ExperimentoDB/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ExperimentoDB51B2D812"
          }
        ],
        "/ExperimentoStack/CacheSecurityGroup": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "vpc": "*",
              "allowAllOutbound": true,
              "description": "*"
            }
          }
        ],
        "/ExperimentoStack/CacheSecurityGroup/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CacheSecurityGroupC6A3ACCF"
          }
        ],
        "/ExperimentoStack/CacheSubnetGroup": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CacheSubnetGroup"
          }
        ],
        "/ExperimentoStack/ExperimentoCache": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ExperimentoCache"
          }
        ],
        "/ExperimentoStack/ExperimentoAPI": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "description": "*",
              "restApiName": "*"
            }
          }
        ],
        "/ExperimentoStack/ExperimentoAPI/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ExperimentoAPI6B676821"
          }
        ],
        "/ExperimentoStack/ExperimentoAPI/Deployment": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "description": "*",
              "api": "*",
              "retainDeployments": "*"
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addToLogicalId": [
                {}
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addToLogicalId": [
                {}
              ]
            }
          }
        ],
        "/ExperimentoStack/ExperimentoAPI/Deployment/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ExperimentoAPIDeploymentEC59151C4961c8a03575c00debfcc6b0f7132539"
          }
        ],
        "/ExperimentoStack/ExperimentoAPI/DeploymentStage.prod": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "deployment": "*"
            }
          }
        ],
        "/ExperimentoStack/ExperimentoAPI/DeploymentStage.prod/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ExperimentoAPIDeploymentStageprod41174A54"
          }
        ],
        "/ExperimentoStack/ExperimentoAPI/Endpoint": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ExperimentoAPIEndpoint22E10038"
          }
        ],
        "/ExperimentoStack/ExperimentoAPI/Default": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          }
        ],
        "/ExperimentoStack/ExperimentoAPI/Default/products": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "parent": "*",
              "pathPart": "*"
            }
          }
        ],
        "/ExperimentoStack/ExperimentoAPI/Default/products/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ExperimentoAPIproductsFB872590"
          }
        ],
        "/ExperimentoStack/ExperimentoAPI/Default/products/GET": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "resource": "*",
              "httpMethod": "*",
              "integration": "*",
              "options": "*"
            }
          }
        ],
        "/ExperimentoStack/ExperimentoAPI/Default/products/GET/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ExperimentoAPIproductsGET64CDCE97"
          }
        ],
        "/ExperimentoStack/ProductsService/ProductsServiceTaskRole": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "assumedBy": {
                "principalAccount": "*",
                "assumeRoleAction": "*"
              },
              "managedPolicies": [
                {
                  "managedPolicyArn": "*"
                }
              ]
            }
          }
        ],
        "/ExperimentoStack/ProductsService/ProductsServiceTaskRole/ImportProductsServiceTaskRole": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          }
        ],
        "/ExperimentoStack/ProductsService/ProductsServiceTaskRole/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ProductsServiceProductsServiceTaskRoleF8E433B4"
          }
        ],
        "/ExperimentoStack/ProductsService/ProductsServiceLogGroup": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "logGroupName": "*",
              "retention": 7
            }
          }
        ],
        "/ExperimentoStack/ProductsService/ProductsServiceLogGroup/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ProductsServiceProductsServiceLogGroup35371AE7"
          }
        ],
        "/ExperimentoStack/ProductsService/ProductsServiceTaskDefinition": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          },
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": "*"
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": "*"
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": "*"
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": "*"
          }
        ],
        "/ExperimentoStack/ProductsService/ProductsServiceTaskDefinition/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ProductsServiceProductsServiceTaskDefinition7112097E"
          }
        ],
        "/ExperimentoStack/ProductsService/ProductsServiceTaskDefinition/ExecutionRole": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "assumedBy": {
                "principalAccount": "*",
                "assumeRoleAction": "*"
              },
              "roleName": "*"
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addToPrincipalPolicy": [
                {}
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "attachInlinePolicy": [
                "*"
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "attachInlinePolicy": [
                "*"
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addToPrincipalPolicy": [
                {}
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addToPrincipalPolicy": [
                {}
              ]
            }
          }
        ],
        "/ExperimentoStack/ProductsService/ProductsServiceTaskDefinition/ExecutionRole/ImportExecutionRole": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          }
        ],
        "/ExperimentoStack/ProductsService/ProductsServiceTaskDefinition/ExecutionRole/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ProductsServiceProductsServiceTaskDefinitionExecutionRole265D6833"
          }
        ],
        "/ExperimentoStack/ProductsService/ProductsServiceTaskDefinition/ExecutionRole/DefaultPolicy": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "attachToRole": [
                "*"
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "attachToRole": [
                "*"
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addStatements": [
                {}
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addStatements": [
                {}
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addStatements": [
                {}
              ]
            }
          }
        ],
        "/ExperimentoStack/ProductsService/ProductsServiceTaskDefinition/ExecutionRole/DefaultPolicy/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ProductsServiceProductsServiceTaskDefinitionExecutionRoleDefaultPolicyAFF2E775"
          }
        ],
        "/ExperimentoStack/ProductsService/ProductsServiceTargetGroup/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ProductsServiceProductsServiceTargetGroup77004340"
          }
        ],
        "/ExperimentoStack/ProductsService/ProductsService": [
          {
            "type": "aws:cdk:warning",
            "data": "minHealthyPercent has not been configured so the default value of 50% is used. The number of running tasks will decrease below the desired count during deployments etc. See https://github.com/aws/aws-cdk/issues/31705 [ack: @aws-cdk/aws-ecs:minHealthyPercent]",
            "trace": [
              "Annotations.addMessage (C:\\Users\\anfer\\AppData\\Local\\Temp\\jsii-kernel-d4T694\\node_modules\\aws-cdk-lib\\core\\lib\\annotations.js:1:1978)",
              "Annotations.addWarningV2 (C:\\Users\\anfer\\AppData\\Local\\Temp\\jsii-kernel-d4T694\\node_modules\\aws-cdk-lib\\core\\lib\\annotations.js:1:896)",
              "new BaseService (C:\\Users\\anfer\\AppData\\Local\\Temp\\jsii-kernel-d4T694\\node_modules\\aws-cdk-lib\\aws-ecs\\lib\\base\\base-service.js:1:8444)",
              "new FargateService2 (C:\\Users\\anfer\\AppData\\Local\\Temp\\jsii-kernel-d4T694\\node_modules\\aws-cdk-lib\\aws-ecs\\lib\\fargate\\fargate-service.js:1:3888)",
              "new FargateService2 (C:\\Users\\anfer\\AppData\\Local\\Temp\\jsii-kernel-d4T694\\node_modules\\aws-cdk-lib\\core\\lib\\prop-injectable.js:1:488)",
              "Kernel._Kernel_create (C:\\Users\\anfer\\AppData\\Local\\Temp\\tmppo79ikfg\\lib\\program.js:548:25)",
              "Kernel.create (C:\\Users\\anfer\\AppData\\Local\\Temp\\tmppo79ikfg\\lib\\program.js:218:93)",
              "KernelHost.processRequest (C:\\Users\\anfer\\AppData\\Local\\Temp\\tmppo79ikfg\\lib\\program.js:15479:36)",
              "KernelHost.run (C:\\Users\\anfer\\AppData\\Local\\Temp\\tmppo79ikfg\\lib\\program.js:15439:22)",
              "Immediate._onImmediate (C:\\Users\\anfer\\AppData\\Local\\Temp\\tmppo79ikfg\\lib\\program.js:15440:45)",
              "process.processImmediate (node:internal/timers:505:21)"
            ]
          },
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          }
        ],
        "/ExperimentoStack/ProductsService/ProductsService/Service": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ProductsService740A68BF"
          }
        ],
        "/ExperimentoStack/ProductsService/ProductsService/SecurityGroup": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "vpc": "*"
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addIngressRule": [
                "*",
                {},
                "*",
                "*"
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addIngressRule": [
                "*",
                {},
                "*",
                false
              ]
            }
          }
        ],
        "/ExperimentoStack/ProductsService/ProductsService/SecurityGroup/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ProductsServiceSecurityGroupBAD7D708"
          }
        ],
        "/ExperimentoStack/ProductsService/ProductsService/SecurityGroup/from ExperimentoStackExperimentoALBSecurityGroup09B96DDF:8080": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ProductsServiceSecurityGroupfromExperimentoStackExperimentoALBSecurityGroup09B96DDF808091752B69"
          }
        ],
        "/ExperimentoStack/ProductsService/RedisSecurityGroup": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "vpc": "*",
              "allowAllOutbound": true,
              "description": "*"
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addIngressRule": [
                "*",
                {},
                "*",
                "*"
              ]
            }
          }
        ],
        "/ExperimentoStack/ProductsService/RedisSecurityGroup/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ProductsServiceRedisSecurityGroupC49B311C"
          }
        ],
        "/ExperimentoStack/ProductsService/RedisSecurityGroup/from ExperimentoStackProductsServiceSecurityGroup331EB863:6379": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ProductsServiceRedisSecurityGroupfromExperimentoStackProductsServiceSecurityGroup331EB8636379E8D591CF"
          }
        ],
        "/ExperimentoStack/CDKMetadata/Default": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CDKMetadata"
          }
        ],
        "/ExperimentoStack/BootstrapVersion": [
          {
            "type": "aws:cdk:logicalId",
            "data": "BootstrapVersion"
          }
        ],
        "/ExperimentoStack/CheckBootstrapVersion": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CheckBootstrapVersion"
          }
        ]
      },
      "displayName": "ExperimentoStack"
    },
    "Tree": {
      "type": "cdk:tree",
      "properties": {
        "file": "tree.json"
      }
    },
    "aws-cdk-lib/feature-flag-report": {
      "type": "cdk:feature-flag-report",
      "properties": {
        "module": "aws-cdk-lib",
        "flags": {
          "@aws-cdk/aws-signer:signingProfileNamePassedToCfn": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Pass signingProfileName to CfnSigningProfile"
          },
          "@aws-cdk/core:newStyleStackSynthesis": {
            "recommendedValue": true,
            "explanation": "Switch to new stack synthesis method which enables CI/CD",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/core:stackRelativeExports": {
            "recommendedValue": true,
            "explanation": "Name exports based on the construct paths relative to the stack, rather than the global construct path",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-rds:lowercaseDbIdentifier": {
            "recommendedValue": true,
            "explanation": "Force lowercasing of RDS Cluster names in CDK",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-apigateway:usagePlanKeyOrderInsensitiveId": {
            "recommendedValue": true,
            "explanation": "Allow adding/removing multiple UsagePlanKeys independently",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-lambda:recognizeVersionProps": {
            "recommendedValue": true,
            "explanation": "Enable this feature flag to opt in to the updated logical id calculation for Lambda Version created using the  `fn.currentVersion`.",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-lambda:recognizeLayerVersion": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Enable this feature flag to opt in to the updated logical id calculation for Lambda Version created using the `fn.currentVersion`."
          },
          "@aws-cdk/aws-cloudfront:defaultSecurityPolicyTLSv1.2_2021": {
            "recommendedValue": true,
            "explanation": "Enable this feature flag to have cloudfront distributions use the security policy TLSv1.2_2021 by default.",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/core:checkSecretUsage": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Enable this flag to make it impossible to accidentally use SecretValues in unsafe locations"
          },
          "@aws-cdk/core:target-partitions": {
            "userValue": [
              "aws",
              "aws-cn"
            ],
            "recommendedValue": [
              "aws",
              "aws-cn"
            ],
            "explanation": "What regions to include in lookup tables of environment agnostic stacks"
          },
          "@aws-cdk-containers/ecs-service-extensions:enableDefaultLogDriver": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "ECS extensions will automatically add an `awslogs` driver if no logging is specified"
          },
          "@aws-cdk/aws-ec2:uniqueImdsv2TemplateName": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Enable this feature flag to have Launch Templates generated by the `InstanceRequireImdsv2Aspect` use unique names."
          },
          "@aws-cdk/aws-ecs:arnFormatIncludesClusterName": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "ARN format used by ECS. In the new ARN format, the cluster name is part of the resource ID."
          },
          "@aws-cdk/aws-iam:minimizePolicies": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Minimize IAM policies by combining Statements"
          },
          "@aws-cdk/core:validateSnapshotRemovalPolicy": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Error on snapshot removal policies on resources that do not support it."
          },
          "@aws-cdk/aws-codepipeline:crossAccountKeyAliasStackSafeResourceName": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Generate key aliases that include the stack name"
          },
          "@aws-cdk/aws-s3:createDefaultLoggingPolicy": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Enable this feature flag to create an S3 bucket policy by default in cases where an AWS service would automatically create the Policy if one does not exist."
          },
          "@aws-cdk/aws-sns-subscriptions:restrictSqsDescryption": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Restrict KMS key policy for encrypted Queues a bit more"
          },
          "@aws-cdk/aws-apigateway:disableCloudWatchRole": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Make default CloudWatch Role behavior safe for multiple API Gateways in one environment"
          },
          "@aws-cdk/core:enablePartitionLiterals": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Make ARNs concrete if AWS partition is known"
          },
          "@aws-cdk/aws-events:eventsTargetQueueSameAccount": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Event Rules may only push to encrypted SQS queues in the same account"
          },
          "@aws-cdk/aws-ecs:disableExplicitDeploymentControllerForCircuitBreaker": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Avoid setting the \"ECS\" deployment controller when adding a circuit breaker"
          },
          "@aws-cdk/aws-iam:importedRoleStackSafeDefaultPolicyName": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Enable this feature to by default create default policy names for imported roles that depend on the stack the role is in."
          },
          "@aws-cdk/aws-s3:serverAccessLogsUseBucketPolicy": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Use S3 Bucket Policy instead of ACLs for Server Access Logging"
          },
          "@aws-cdk/aws-route53-patters:useCertificate": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Use the official `Certificate` resource instead of `DnsValidatedCertificate`"
          },
          "@aws-cdk/customresources:installLatestAwsSdkDefault": {
            "userValue": false,
            "recommendedValue": false,
            "explanation": "Whether to install the latest SDK by default in AwsCustomResource"
          },
          "@aws-cdk/aws-rds:databaseProxyUniqueResourceName": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Use unique resource name for Database Proxy"
          },
          "@aws-cdk/aws-codedeploy:removeAlarmsFromDeploymentGroup": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Remove CloudWatch alarms from deployment group"
          },
          "@aws-cdk/aws-apigateway:authorizerChangeDeploymentLogicalId": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Include authorizer configuration in the calculation of the API deployment logical ID."
          },
          "@aws-cdk/aws-ec2:launchTemplateDefaultUserData": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Define user data for a launch template by default when a machine image is provided."
          },
          "@aws-cdk/aws-secretsmanager:useAttachedSecretResourcePolicyForSecretTargetAttachments": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "SecretTargetAttachments uses the ResourcePolicy of the attached Secret."
          },
          "@aws-cdk/aws-redshift:columnId": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Whether to use an ID to track Redshift column changes"
          },
          "@aws-cdk/aws-stepfunctions-tasks:enableEmrServicePolicyV2": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Enable AmazonEMRServicePolicy_v2 managed policies"
          },
          "@aws-cdk/aws-ec2:restrictDefaultSecurityGroup": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Restrict access to the VPC default security group"
          },
          "@aws-cdk/aws-apigateway:requestValidatorUniqueId": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Generate a unique id for each RequestValidator added to a method"
          },
          "@aws-cdk/aws-kms:aliasNameRef": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "KMS Alias name and keyArn will have implicit reference to KMS Key"
          },
          "@aws-cdk/aws-kms:applyImportedAliasPermissionsToPrincipal": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Enable grant methods on Aliases imported by name to use kms:ResourceAliases condition"
          },
          "@aws-cdk/aws-autoscaling:generateLaunchTemplateInsteadOfLaunchConfig": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Generate a launch template when creating an AutoScalingGroup"
          },
          "@aws-cdk/core:includePrefixInUniqueNameGeneration": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Include the stack prefix in the stack name generation process"
          },
          "@aws-cdk/aws-efs:denyAnonymousAccess": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "EFS denies anonymous clients accesses"
          },
          "@aws-cdk/aws-opensearchservice:enableOpensearchMultiAzWithStandby": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Enables support for Multi-AZ with Standby deployment for opensearch domains"
          },
          "@aws-cdk/aws-lambda-nodejs:useLatestRuntimeVersion": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Enables aws-lambda-nodejs.Function to use the latest available NodeJs runtime as the default"
          },
          "@aws-cdk/aws-efs:mountTargetOrderInsensitiveLogicalId": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, mount targets will have a stable logicalId that is linked to the associated subnet."
          },
          "@aws-cdk/aws-rds:auroraClusterChangeScopeOfInstanceParameterGroupWithEachParameters": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, a scope of InstanceParameterGroup for AuroraClusterInstance with each parameters will change."
          },
          "@aws-cdk/aws-appsync:useArnForSourceApiAssociationIdentifier": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, will always use the arn for identifiers for CfnSourceApiAssociation in the GraphqlApi construct rather than id."
          },
          "@aws-cdk/aws-rds:preventRenderingDeprecatedCredentials": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, creating an RDS database cluster from a snapshot will only render credentials for snapshot credentials."
          },
          "@aws-cdk/aws-codepipeline-actions:useNewDefaultBranchForCodeCommitSource": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, the CodeCommit source action is using the default branch name 'main'."
          },
          "@aws-cdk/aws-cloudwatch-actions:changeLambdaPermissionLogicalIdForLambdaAction": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, the logical ID of a Lambda permission for a Lambda action includes an alarm ID."
          },
          "@aws-cdk/aws-codepipeline:crossAccountKeysDefaultValueToFalse": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Enables Pipeline to set the default value for crossAccountKeys to false."
          },
          "@aws-cdk/aws-codepipeline:defaultPipelineTypeToV2": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Enables Pipeline to set the default pipeline type to V2."
          },
          "@aws-cdk/aws-kms:reduceCrossAccountRegionPolicyScope": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, IAM Policy created from KMS key grant will reduce the resource scope to this key only."
          },
          "@aws-cdk/pipelines:reduceAssetRoleTrustScope": {
            "recommendedValue": true,
            "explanation": "Remove the root account principal from PipelineAssetsFileRole trust policy",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-eks:nodegroupNameAttribute": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, nodegroupName attribute of the provisioned EKS NodeGroup will not have the cluster name prefix."
          },
          "@aws-cdk/aws-ec2:ebsDefaultGp3Volume": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, the default volume type of the EBS volume will be GP3"
          },
          "@aws-cdk/aws-ecs:removeDefaultDeploymentAlarm": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, remove default deployment alarm settings"
          },
          "@aws-cdk/custom-resources:logApiResponseDataPropertyTrueDefault": {
            "userValue": false,
            "recommendedValue": false,
            "explanation": "When enabled, the custom resource used for `AwsCustomResource` will configure the `logApiResponseData` property as true by default"
          },
          "@aws-cdk/aws-s3:keepNotificationInImportedBucket": {
            "userValue": false,
            "recommendedValue": false,
            "explanation": "When enabled, Adding notifications to a bucket in the current stack will not remove notification from imported stack."
          },
          "@aws-cdk/aws-stepfunctions-tasks:useNewS3UriParametersForBedrockInvokeModelTask": {
            "recommendedValue": true,
            "explanation": "When enabled, use new props for S3 URI field in task definition of state machine for bedrock invoke model.",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/core:explicitStackTags": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, stack tags need to be assigned explicitly on a Stack."
          },
          "@aws-cdk/aws-ecs:enableImdsBlockingDeprecatedFeature": {
            "userValue": false,
            "recommendedValue": false,
            "explanation": "When set to true along with canContainersAccessInstanceRole=false in ECS cluster, new updated commands will be added to UserData to block container accessing IMDS. **Applicable to Linux only. IMPORTANT: See [details.](#aws-cdkaws-ecsenableImdsBlockingDeprecatedFeature)**"
          },
          "@aws-cdk/aws-ecs:disableEcsImdsBlocking": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When set to true, CDK synth will throw exception if canContainersAccessInstanceRole is false. **IMPORTANT: See [details.](#aws-cdkaws-ecsdisableEcsImdsBlocking)**"
          },
          "@aws-cdk/aws-ecs:reduceEc2FargateCloudWatchPermissions": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, we will only grant the necessary permissions when users specify cloudwatch log group through logConfiguration"
          },
          "@aws-cdk/aws-dynamodb:resourcePolicyPerReplica": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled will allow you to specify a resource policy per replica, and not copy the source table policy to all replicas"
          },
          "@aws-cdk/aws-ec2:ec2SumTImeoutEnabled": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, initOptions.timeout and resourceSignalTimeout values will be summed together."
          },
          "@aws-cdk/aws-appsync:appSyncGraphQLAPIScopeLambdaPermission": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, a Lambda authorizer Permission created when using GraphqlApi will be properly scoped with a SourceArn."
          },
          "@aws-cdk/aws-rds:setCorrectValueForDatabaseInstanceReadReplicaInstanceResourceId": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, the value of property `instanceResourceId` in construct `DatabaseInstanceReadReplica` will be set to the correct value which is `DbiResourceId` instead of currently `DbInstanceArn`"
          },
          "@aws-cdk/core:cfnIncludeRejectComplexResourceUpdateCreatePolicyIntrinsics": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, CFN templates added with `cfn-include` will error if the template contains Resource Update or Create policies with CFN Intrinsics that include non-primitive values."
          },
          "@aws-cdk/aws-lambda-nodejs:sdkV3ExcludeSmithyPackages": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, both `@aws-sdk` and `@smithy` packages will be excluded from the Lambda Node.js 18.x runtime to prevent version mismatches in bundled applications."
          },
          "@aws-cdk/aws-stepfunctions-tasks:fixRunEcsTaskPolicy": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, the resource of IAM Run Ecs policy generated by SFN EcsRunTask will reference the definition, instead of constructing ARN."
          },
          "@aws-cdk/aws-ec2:bastionHostUseAmazonLinux2023ByDefault": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, the BastionHost construct will use the latest Amazon Linux 2023 AMI, instead of Amazon Linux 2."
          },
          "@aws-cdk/core:aspectStabilization": {
            "recommendedValue": true,
            "explanation": "When enabled, a stabilization loop will be run when invoking Aspects during synthesis.",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-route53-targets:userPoolDomainNameMethodWithoutCustomResource": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, use a new method for DNS Name of user pool domain target without creating a custom resource."
          },
          "@aws-cdk/aws-elasticloadbalancingV2:albDualstackWithoutPublicIpv4SecurityGroupRulesDefault": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, the default security group ingress rules will allow IPv6 ingress from anywhere"
          },
          "@aws-cdk/aws-iam:oidcRejectUnauthorizedConnections": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, the default behaviour of OIDC provider will reject unauthorized connections"
          },
          "@aws-cdk/core:enableAdditionalMetadataCollection": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, CDK will expand the scope of usage data collected to better inform CDK development and improve communication for security concerns and emerging issues."
          },
          "@aws-cdk/aws-lambda:createNewPoliciesWithAddToRolePolicy": {
            "userValue": false,
            "recommendedValue": false,
            "explanation": "[Deprecated] When enabled, Lambda will create new inline policies with AddToRolePolicy instead of adding to the Default Policy Statement"
          },
          "@aws-cdk/aws-s3:setUniqueReplicationRoleName": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, CDK will automatically generate a unique role name that is used for s3 object replication."
          },
          "@aws-cdk/pipelines:reduceStageRoleTrustScope": {
            "recommendedValue": true,
            "explanation": "Remove the root account principal from Stage addActions trust policy",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-events:requireEventBusPolicySid": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, grantPutEventsTo() will use resource policies with Statement IDs for service principals."
          },
          "@aws-cdk/core:aspectPrioritiesMutating": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When set to true, Aspects added by the construct library on your behalf will be given a priority of MUTATING."
          },
          "@aws-cdk/aws-dynamodb:retainTableReplica": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, table replica will be default to the removal policy of source table unless specified otherwise."
          },
          "@aws-cdk/cognito:logUserPoolClientSecretValue": {
            "recommendedValue": false,
            "explanation": "When disabled, the value of the user pool client secret will not be logged in the custom resource lambda function logs."
          },
          "@aws-cdk/pipelines:reduceCrossAccountActionRoleTrustScope": {
            "recommendedValue": true,
            "explanation": "When enabled, scopes down the trust policy for the cross-account action role",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-stepfunctions:useDistributedMapResultWriterV2": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, the resultWriterV2 property of DistributedMap will be used insted of resultWriter"
          },
          "@aws-cdk/s3-notifications:addS3TrustKeyPolicyForSnsSubscriptions": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Add an S3 trust policy to a KMS key resource policy for SNS subscriptions."
          },
          "@aws-cdk/aws-ec2:requirePrivateSubnetsForEgressOnlyInternetGateway": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, the EgressOnlyGateway resource is only created if private subnets are defined in the dual-stack VPC."
          },
          "@aws-cdk/aws-ec2-alpha:useResourceIdForVpcV2Migration": {
            "recommendedValue": false,
            "explanation": "When enabled, use resource IDs for VPC V2 migration"
          },
          "@aws-cdk/aws-s3:publicAccessBlockedByDefault": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, setting any combination of options for BlockPublicAccess will automatically set true for any options not defined."
          },
          "@aws-cdk/aws-lambda:useCdkManagedLogGroup": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, CDK creates and manages loggroup for the lambda function"
          }
        }
      }
    }
  },
  "minimumCliVersion": "2.1029.1"
}